// Generated by CoffeeScript 2.3.2
(function() {
  var Big, _, args2, getDiffRate, math;

  _ = require('lodash');

  Big = require('big.js');

  args2 = require('args2');

  getDiffRate = function(base, target, round) {
    var _base, res;
    // (target - base) / abs(base)
    res = new Big(target).minus(base);
    _base = new Big(base).abs();
    return res.div(_base);
  };

  math = {
    diffRate: function(base, target, round) {
      var e;
      try {
        round = round != null ? round : 2;
        return Number(getDiffRate(base, target).times(100).round(round));
      } catch (error) {
        e = error;
        return 0/0;
      }
    },
    progressRate: function(target, progress, round) {
      var _diffRate, e;
      try {
        if (target === 0) {
          // 1 + ((target - base) / abs(base))
          return 0/0;
        }
        round = round != null ? round : 2;
        _diffRate = getDiffRate(target, progress);
        return Number(new Big(1).plus(_diffRate).times(100).round(round));
      } catch (error) {
        e = error;
        return 0/0;
      }
    },
    addChangeInRates: function(array, name, newName) {
      var ref;
      if (!_.isArray(array)) {
        return [];
      }
      if (!name) {
        return array;
      }
      newName = newName ? newName : `changeIn_${name}`;
      ref = null;
      return array.map(function(item, index) {
        var val;
        val = _.get(item, name);
        if (index === 0) {
          ref = val;
          return item;
        }
        if (val != null) {
          item[newName] = math.diffRate(ref, val);
          ref = val;
          return item;
        } else {
          return item[newName] = null;
        }
      });
    }
  };

  module.exports = math;

}).call(this);
