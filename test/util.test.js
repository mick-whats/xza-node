// Generated by CoffeeScript 2.2.4
(function() {
  var _, assert, test, util, xza;

  assert = require('assert');

  _ = require('lodash');

  ({test} = require('ava'));

  xza = require('../');

  util = xza.utility;

  test('util.sizeof', function(t) {
    var obj;
    t.is(util.sizeof(1999), '8 B');
    obj = (function() {
      var results = [];
      for (var j = 0; j <= 10000; j++){ results.push(j); }
      return results;
    }).apply(this).map(function(i) {
      return {
        name: `testName${i}`,
        value: i
      };
    });
    return t.is(util.sizeof(obj), '576 kB');
  });

  test('util.strToNumber', function(t) {
    var strToNumber;
    ({strToNumber} = xza.utility);
    t.true(strToNumber('123,456') === 123456);
    t.true(strToNumber('-123,456,789') === -123456789);
    t.true(strToNumber('△123,456,789') === -123456789);
    t.true(strToNumber('▲123,456,789') === -123456789);
    t.true(strToNumber('Δ123,456,789') === -123456789);
    t.true(Number.isNaN(strToNumber('▼123,456,789')));
    t.true(Number.isNaN(strToNumber('abc')));
    t.false(strToNumber('abc', false) === (0/0));
    t.true(strToNumber('abc', false) === false);
    t.false(strToNumber('abc', true) === (0/0));
    t.true(strToNumber('abc', true) === true);
    t.false(strToNumber('abc', null) === (0/0));
    return t.true(strToNumber('abc', null) === null);
  });

}).call(this);
